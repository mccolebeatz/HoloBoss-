import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

BOT_TOKEN = 8480613736:AAH0NiM2UfgSNT_Hyf0DFuIf3wf82Hq-0Fs os.getenv

# Simple in-memory queue (you can replace with database later)
shared_links = [
    "https://www.instagram.com/reel/DPCtJd5kq9u/?igsh=MWllbmd4OWw4aDNtNQ==",
    "https://www.instagram.com/reel/DOZ9Dm6kea6/?igsh=NDFtandobjF5cnpn",
    "https://www.instagram.com/reel/Cw9DucfL-2v/?igsh=bGVnZDg5d29xam0=",
    "https://www.instagram.com/reel/DOwjvKHki8E/?igsh=MW40eXpqem9yNnBibQ==",
    "https://www.instagram.com/reel/DL3ji-avGQM/?igsh=ZXlvNXk2djN0d2Zl",
    "https://www.instagram.com/reel/DLfjee9PFNp/?igsh=MWNrOXl2aDV3Nzh0NQ==",
    "https://www.instagram.com/reel/DK8Bzmnyv-s/?igsh=YjQ1MnFkYzlyOXV3"
]

leaderboard = {
    "Kavion": 10,
    "Tasha": 8,
    "Jamie": 6,
    "Mira": 5,
    "Ari": 3
}

# 🟢 /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "👋 Welcome to Inner Circle 2025!\n\n"
        "Here we grow together — real followers, real results.\n"
        "Type /help to see available commands."
    )

# 🧭 /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "📘 Available Commands:\n"
        "/start - Show welcome message\n"
        "/help - Show this help menu\n"
        "/rules - Show community rules\n"
        "/queue - Show last 7 shared links\n"
        "/leaderboard - See the top sharers"
    )

# 📜 /rules
async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "📜 Family Rules:\n\n"
        "1️⃣ Be respectful — no spam or hate.\n"
        "2️⃣ Share real links only.\n"
        "3️⃣ Engage with others’ posts daily.\n"
        "4️⃣ No fake accounts or bots.\n"
        "5️⃣ Keep it positive and authentic 💫"
    )

# 🔗 /queue
async def queue(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = "🧾 Last 7 Shared Links:\n\n"
    for idx, link in enumerate(shared_links[-7:], start=1):
        message += f"{idx}. {link}\n"
    await update.message.reply_text(message)

# 🏆 /leaderboard
async def leaderboard_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    sorted_board = sorted(leaderboard.items(), key=lambda x: x[1], reverse=True)
    message = "🏆 Top Sharers:\n\n"
    for rank, (name, score) in enumerate(sorted_board, start=1):
        message += f"{rank}. {name} — {score} shares\n"
    await update.message.reply_text(message)

# Create the bot app
app = ApplicationBuilder().token(BOT_TOKEN).build()

# Register commands
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(CommandHandler("rules", rules))
app.add_handler(CommandHandler("queue", queue))
app.add_handler(CommandHandler("leaderboard", leaderboard_command))

if __name__ == "__main__":
    print("🤖 HoloBoss Bot is running...")
    asyncio.run(app.run_polling())